@using MudBlazor
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Utility.CacheBuster CacheBuster

<div id="navbarMain" class="top-row ps-3 navbar navbar-dark">
    <div id="navbarContainer" style="display: flex; align-items: center;">
        <div id="navbarGravatar">
            <MudMenu>
                <ActivatorContent>
                    <MudAvatar Size="Size.Medium" Class="mud-avatar-cursor nav-avatar">
                        @if (!string.IsNullOrEmpty(GravatarUrl))
                        {
                            <img src="@GravatarUrl" style="width:100%;height:100%;border-radius:50%;" alt="@UserEmail" />
                        }
                        else
                        {
                            <span>@Initials</span>
                        }
                    </MudAvatar>
                </ActivatorContent>
                <ChildContent>
                    <MudMenuItem OnClick="@(() => Navigation.NavigateTo("/about"))">
                        About
                    </MudMenuItem>
                    <MudDivider />
                    <MudMenuItem OnClick="@(() => Navigation.NavigateTo("/signout"))">
                        Logout
                    </MudMenuItem>
                </ChildContent>
            </MudMenu>
        </div>
        <div id="navbarLogo">
            <a class="navbar-brand nav-brand" href=""><img alt="Application Logo" src="img/AzDoBoards.png?v=@CacheBuster.Value" srcset="img/AzDoBoards.svg?v=@CacheBuster.Value" /></a>
        </div>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler" />

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3"><NavLink class="nav-link" href="" Match="NavLinkMatch.All"><img src="@Icon("NavDashboard")" class="nav-icon" alt="" role="presentation" /> Dashboard </NavLink></div>
        <div class="nav-item px-3"><NavLink class="nav-link" href="items">                    <img src="@Icon("NavItems")"     class="nav-icon" alt="" role="presentation" /> Items     </NavLink></div>
        <div class="nav-item px-3"><NavLink class="nav-link" href="settings">                 <img src="@Icon("NavSettings")"  class="nav-icon" alt="" role="presentation" /> Settings  </NavLink></div>
        <div class="nav-item px-3"><NavLink class="nav-link" href="process">                   <img src="@Icon("NavProcess")"  class="nav-icon" alt="" role="presentation" /> Processes </NavLink></div>
    </nav>
</div>

@code {
    private string? UserEmail;
    private string? GravatarUrl;
    private string? Initials;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        UserEmail = user?.Claims.FirstOrDefault(c => c.Type == "preferred_username")?.Value;
        GravatarUrl = !string.IsNullOrEmpty(UserEmail) ? GetGravatarUrl(UserEmail) : null;

        if (!string.IsNullOrEmpty(GravatarUrl)) return;

        var givenName = user?.Claims.FirstOrDefault(c => c.Type == "given_name")?.Value;
        var surname = user?.Claims.FirstOrDefault(c => c.Type == "family_name")?.Value;
        Initials = !string.IsNullOrEmpty(givenName) && !string.IsNullOrEmpty(surname) ? $"{givenName[0]}{surname[0]}".ToUpper() : "?";
    }

    private string GetGravatarUrl(string email)
    {
        var emailLower = email.Trim().ToLowerInvariant();
        var hash = GetMd5Hash(emailLower);
        return $"https://www.gravatar.com/avatar/{hash}?s=40&d=identicon";
    }

    private static string GetMd5Hash(string input)
    {
        using var md5 = System.Security.Cryptography.MD5.Create();
        var inputBytes = System.Text.Encoding.UTF8.GetBytes(input);
        var hashBytes = md5.ComputeHash(inputBytes);
        return string.Concat(hashBytes.Select(b => b.ToString("x2")));
    }

    private string Icon(string file) => $"img/{file}.svg?v={CacheBuster.Value}";
}